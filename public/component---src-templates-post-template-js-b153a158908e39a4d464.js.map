{"version":3,"sources":["webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./src/templates/post-template.js","webpack://gatsby-starter-glass/./src/utils/index.js"],"names":["tags","langKey","map","tag","Tag","key","to","str","match","x","toLowerCase","join","styled","data","pageContext","markdownRemark","frontmatter","excerpt","html","prev","next","title","description","PostWrapper","PostTitle","PostDate","formatDate","date","PostContent","dangerouslySetInnerHTML","__html","PostPagination","Link","fields","slug","dateObj","Date","toLocaleDateString","month","year","day"],"mappings":"kKA4BA,IAjBa,SAAC,GAAuB,IAArBA,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpB,OACE,2BACGD,GACCA,EAAKE,KAAI,SAACC,GACR,OACE,gBAACC,EAAD,CAAKC,IAAKF,GACR,gBAAC,IAAD,CAAcF,QAASA,EAASK,GAAE,UAd3BC,EAckDJ,EAb9DI,EACJC,MAAM,sEACNN,KAAI,SAACO,GAAD,OAAOA,EAAEC,iBACbC,KAAK,OAWOR,IAfG,IAACI,OA0BrB,IAAMH,EAAMQ,qBAAH,qDAAGA,CAAH,6U,wGCmBT,UA1CqB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAAkB,EACPD,EAAKE,eAApCC,EADsC,EACtCA,YAAaC,EADyB,EACzBA,QAASC,EADgB,EAChBA,KACxBC,EAAON,EAAKM,KACZC,EAAOP,EAAKO,KAElB,OACE,gBAAC,IAAD,CACEC,MAAOL,EAAYK,MACnBC,YAAaN,EAAYM,aAAeL,EACxChB,QAASa,EAAYb,SAErB,gBAACsB,EAAD,KACE,+BACE,gBAACC,EAAD,KAAYR,EAAYK,OACxB,gBAACI,EAAD,MACGC,OAAWV,EAAYW,KAAMb,EAAYb,UAG5C,gBAAC2B,EAAD,CAAaC,wBAAyB,CAAEC,OAAQZ,MAGlD,gBAACa,EAAD,KACGZ,GACC,2BACE,wCACA,gBAAC,EAAAa,KAAD,CAAM1B,GAAIa,EAAKc,OAAOC,MAAtB,IAA8Bf,EAAKH,YAAYK,QAIlDD,GACC,2BACE,oCACA,gBAAC,EAAAY,KAAD,CAAM1B,GAAIc,EAAKa,OAAOC,MAAtB,IAA8Bd,EAAKJ,YAAYK,SAIrD,gBAAC,IAAD,CAAMrB,KAAMgB,EAAYhB,KAAMC,QAASa,EAAYb,aAQ3D,IAAMsB,EAAcX,oBAAH,kEAAGA,CAAH,wIASXY,EAAYZ,mBAAH,gEAAGA,CAAH,gCAITa,EAAWb,qBAAH,+DAAGA,CAAH,0EAMRgB,EAAchB,wBAAH,kEAAGA,CAAH,8jBA2DXmB,EAAiBnB,oBAAH,qEAAGA,CAAH,6nB,kECjIb,IAAMc,EAAa,SAACC,EAAM1B,GAC/B,IAAMkC,EAAUR,aAAgBS,KAAOT,EAAO,IAAIS,KAAKT,GAEvD,OAAQ1B,GACN,IAAK,KACH,OAAOkC,EAAQE,mBAAmB,KAAM,CACtCC,MAAO,OACPC,KAAM,UACNC,IAAK,YAET,IAAK,KACH,OAAOL,EAAQE,mBAAmB,KAAM,CACtCC,MAAO,UACPC,KAAM,UACNC,IAAK,YAET,QACE,OAAOL,EAAQE","file":"component---src-templates-post-template-js-b153a158908e39a4d464.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport LinkWithLang from \"./link-with-lang\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join(\"-\");\n};\n\nconst Tags = ({ tags, langKey }) => {\n  return (\n    <div>\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <Tag key={tag}>\n              <LinkWithLang langKey={langKey} to={`/tags/${toKebabCase(tag)}`}>\n                {tag}\n              </LinkWithLang>\n            </Tag>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Tags;\n\nconst Tag = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    background-color: rgba(255, 255, 255, 0.7);\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n`;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport styled from \"styled-components\";\nimport Tags from \"../components/tags\";\nimport { formatDate } from \"../utils\";\n\nconst PostTemplate = ({ data, pageContext }) => {\n  const { frontmatter, excerpt, html } = data.markdownRemark;\n  const prev = data.prev;\n  const next = data.next;\n\n  return (\n    <Layout\n      title={frontmatter.title}\n      description={frontmatter.description || excerpt}\n      langKey={pageContext.langKey}\n    >\n      <PostWrapper>\n        <article>\n          <PostTitle>{frontmatter.title}</PostTitle>\n          <PostDate>\n            {formatDate(frontmatter.date, pageContext.langKey)}\n          </PostDate>\n\n          <PostContent dangerouslySetInnerHTML={{ __html: html }} />\n        </article>\n\n        <PostPagination>\n          {prev && (\n            <div>\n              <span>previous</span>\n              <Link to={prev.fields.slug}> {prev.frontmatter.title}</Link>\n            </div>\n          )}\n\n          {next && (\n            <div>\n              <span>next</span>\n              <Link to={next.fields.slug}> {next.frontmatter.title}</Link>\n            </div>\n          )}\n        </PostPagination>\n        <Tags tags={frontmatter.tags} langKey={pageContext.langKey} />\n      </PostWrapper>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nconst PostWrapper = styled.div`\n  padding-top: var(--size-900);\n  padding-bottom: var(--size-900);\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 70ch;\n  word-wrap: break-word;\n`;\n\nconst PostTitle = styled.h1`\n  font-size: var(--size-700);\n`;\n\nconst PostDate = styled.span`\n  font-size: var(--size-400);\n  padding-top: 1rem;\n  text-transform: uppercase;\n`;\n\nconst PostContent = styled.section`\n  padding-top: var(--size-800);\n\n  & > * + * {\n    margin-top: var(--size-300);\n  }\n\n  & > p + p {\n    margin-top: var(--size-700);\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: var(--size-900);\n  }\n\n  h1 {\n    font-size: var(--size-700);\n  }\n\n  h2 {\n    font-size: var(--size-600);\n  }\n\n  h3 {\n    font-size: var(--size-500);\n  }\n\n  b,\n  strong {\n    font-weight: 600;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: underline;\n    text-decoration-thickness: 0.125rem;\n  }\n\n  blockquote {\n    padding-left: var(--size-400);\n    border-left: 5px solid;\n    font-style: italic;\n  }\n\n  code {\n    font-family: \"Source Sans Pro\", monospace;\n    overflow-x: auto;\n    white-space: pre-wrap;\n  }\n\n  pre {\n    overflow-x: auto;\n    white-space: pre-wrap;\n    max-width: 100%;\n  }\n`;\n\nconst PostPagination = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: var(--size-900);\n\n  & > * {\n    position: relative;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    border-radius: 8px;\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(10px);\n    margin: 0.5rem;\n  }\n\n  & > *:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  & span {\n    text-transform: uppercase;\n    opacity: 0.6;\n    font-size: var(--size-400);\n    padding-bottom: var(--size-500);\n  }\n\n  & a {\n    color: inherit;\n    text-decoration: none;\n    font-size: var(--size-400);\n    text-transform: capitalize;\n  }\n\n  & a::after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n  }\n`;\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!, $prevSlug: String, $nextSlug: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        tags\n        date\n        description\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","export const formatDate = (date, langKey) => {\n  const dateObj = date instanceof Date ? date : new Date(date);\n\n  switch (langKey) {\n    case \"en\":\n      return dateObj.toLocaleDateString(\"en\", {\n        month: \"long\",\n        year: \"numeric\",\n        day: \"numeric\",\n      });\n    case \"zh\":\n      return dateObj.toLocaleDateString(\"zh\", {\n        month: \"numeric\",\n        year: \"numeric\",\n        day: \"numeric\",\n      });\n    default:\n      return dateObj.toLocaleDateString();\n  }\n};\n"],"sourceRoot":""}